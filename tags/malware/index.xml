<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware on wroot</title>
    <link>http://wroot.org/tags/malware/</link>
    <description>Recent content in Malware on wroot</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 23 Sep 2015 14:13:55 +0000</lastBuildDate>
    
	<atom:link href="http://wroot.org/tags/malware/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Babadook: Connection-less Powershell Persistent and Resilient “Backdoor”</title>
      <link>http://wroot.org/posts/babadook-connection-less-powershell-persistent-and-resilient-backdoor/</link>
      <pubDate>Wed, 23 Sep 2015 14:13:55 +0000</pubDate>
      
      <guid>http://wroot.org/posts/babadook-connection-less-powershell-persistent-and-resilient-backdoor/</guid>
      <description>At my previous company I used to prank the colleagues who left their stations unlocked. I call this my &amp;#8220;internal awareness program&amp;#8221;.
It was all fun and games at the beginning. I would leave post-its on their monitors with a friendly message &amp;#8220;You could&amp;#8217;ve been hacked&amp;#8221; but it wasn&amp;#8217;t giving the expected results. Some colleagues found it funny and started &amp;#8220;collecting&amp;#8221; my post-its. There was a guy in particular with 5 of them.</description>
    </item>
    
    <item>
      <title>Calling functions without their names in PHP</title>
      <link>http://wroot.org/posts/calling-functions-without-their-names-in-php/</link>
      <pubDate>Thu, 10 Apr 2014 23:11:52 +0000</pubDate>
      
      <guid>http://wroot.org/posts/calling-functions-without-their-names-in-php/</guid>
      <description>Strings. Ah juicy and precious strings! It is common for malware scanners and IDPS to look for suspicious strings in network traffic and files&amp;#8230; but what if there are no strings to look for? (whaaa?)
Today I was wondering about some features found in many interpreted languages of listing its internal functions in some sort of list/array. This way we can enumerate the [index] =&amp;gt; function_name relationship, replace all function_names on the code to their index and voilá!</description>
    </item>
    
    <item>
      <title>Shared-hosting accounts victims of lame directory permissions</title>
      <link>http://wroot.org/posts/shared-hosting-accounts-victims-of-lame-directory-permissions/</link>
      <pubDate>Wed, 14 Dec 2011 17:40:00 +0000</pubDate>
      
      <guid>http://wroot.org/posts/shared-hosting-accounts-victims-of-lame-directory-permissions/</guid>
      <description>From a few months some clients started to complain about their shared-hosting accounts being amazingly owned even if their PHP applications (WordPress mostly) were totally up to date.
The malware got into most of the PHP files including a PHP snippet that would eval and decode a base64-encoded string containing a script declaration loading Javascript from outside. This Javascript usually initiates download of .exe&amp;#8217;s and stuff.
A friend&amp;#8217;s account got hacked a few days back by this very same technique.</description>
    </item>
    
    <item>
      <title>Endpoint DLP: Is hardware access control enough?</title>
      <link>http://wroot.org/posts/endpoint-dlp-is-hardware-access-control-enough/</link>
      <pubDate>Wed, 26 Jan 2011 02:30:48 +0000</pubDate>
      
      <guid>http://wroot.org/posts/endpoint-dlp-is-hardware-access-control-enough/</guid>
      <description>I&amp;#8217;ve stumbled on this article about using a custom-built hardware to bypass hardware enforcement on most DLP solutions available on market.
The solution uses an Atmel&amp;#8217;s AVR microcontroller (the same on the Arduino&amp;#8216;s I&amp;#8217;ve been playing around lately) and the V-USB library to create a virtual USB device and is crafted to announce itself as HID (Human-interface device). What common hardware fits this description: the keyboard. As you are not likely to forbid keyboard access to your users (or else they wouldn&amp;#8217;t be able to type and thus work), this will gracefully pass through many enforcements.</description>
    </item>
    
    <item>
      <title>Anatomy of the W32.Stuxnet SCADA threat</title>
      <link>http://wroot.org/posts/anatomy-of-the-w32-stuxnet-scada-threat/</link>
      <pubDate>Fri, 06 Aug 2010 13:43:41 +0000</pubDate>
      
      <guid>http://wroot.org/posts/anatomy-of-the-w32-stuxnet-scada-threat/</guid>
      <description>Symantec released an in-depth analysis of W32.Stuxnet, reviewed through IDA-PRO. The analysis shows off the staged infection process, the unusual injection of legitimate services instead of issuing LoadLibrary calls, core encryption and exported functions.
Tofino Security (specialized on SCADA security) has released an excellent white paper on the case (requires [free] registration). If you are a Malware Researcher / Reverse Engineer or just curious, I totally recommend it.
There&amp;#8217;s code, great explanation, images, graphs and such explaining it all the process from infection, rooting and the propper malware code.</description>
    </item>
    
    <item>
      <title>Stuxnet targets SCADA systems via USB drives vectors</title>
      <link>http://wroot.org/posts/stuxnet-targets-scada-systems-via-usb-drives-vectors/</link>
      <pubDate>Fri, 23 Jul 2010 16:19:06 +0000</pubDate>
      
      <guid>http://wroot.org/posts/stuxnet-targets-scada-systems-via-usb-drives-vectors/</guid>
      <description>Microsoft disclosed a zero-day flaw on Windows Shell on Friday and Stuxnet (W32.Stuxnet) is already exploiting it to gain access to SCADA systems through its attack vector.
Since SCADA systems are updated mainly by CDs or pen drives, the attack vector fits as a glove. The malware targets Siemens&amp;#8217; Simatic WinCC software and intends to steal information like projects schematics and upload them to an external website.
From CNet:
 Once the malware locates the data it is looking for it encodes it and attempts to upload it to a remote server.</description>
    </item>
    
  </channel>
</rss>