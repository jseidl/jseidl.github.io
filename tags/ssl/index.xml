<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssl on wroot</title>
    <link>http://wroot.org/tags/ssl/</link>
    <description>Recent content in Ssl on wroot</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 13 Jul 2010 17:42:06 +0000</lastBuildDate>
    
	<atom:link href="http://wroot.org/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Downgrade HTTPS connections to HTTP using Ettercap filters</title>
      <link>http://wroot.org/posts/downgrade-https-connections-to-http-using-ettercap-filters/</link>
      <pubDate>Tue, 13 Jul 2010 17:42:06 +0000</pubDate>
      
      <guid>http://wroot.org/posts/downgrade-https-connections-to-http-using-ettercap-filters/</guid>
      <description>Ettercap is a great tool for MITM poisoning and sniffing. Everyone on Infosec should have played with it (or Cain) at least once.
Man-In-The-Middle MITM attacks are pretty easy to perform on a local network but the tools tend to crash a LOT. Cain (Windows) is a little more stable than Ettercap but I prefer it over Cain because it doesn&amp;#8217;t spoof SSL that I consider too loud depending on the attack.</description>
    </item>
    
    <item>
      <title>Mitigating the risk on an ARP poison attack</title>
      <link>http://wroot.org/posts/mitigating-the-risk-on-an-arp-poison-attack/</link>
      <pubDate>Sat, 29 May 2010 23:44:57 +0000</pubDate>
      
      <guid>http://wroot.org/posts/mitigating-the-risk-on-an-arp-poison-attack/</guid>
      <description>ARP poisoning is a technique quite simple to be applied and allows traffic to be sniffer over a switched network. It can be used to sniff the connection on-the-fly and capture plain-text password or hashes. ARP poison also allows combination with other attacks such as DNS spoof and packet filters in order to deploy client side exploits transparently.
This attack can only be performed from the local network because ARP packets aren&amp;#8217;t routed so you can&amp;#8217;t hop between LANs but it can be performed from any machine on the same network so it is a serious concern when dealing with unhappy employees, interns and industrial espionage.</description>
    </item>
    
    <item>
      <title>Preventing your servers from downgrade attacks</title>
      <link>http://wroot.org/posts/preventing-your-servers-from-downgrade-attacks/</link>
      <pubDate>Sat, 22 May 2010 21:33:15 +0000</pubDate>
      
      <guid>http://wroot.org/posts/preventing-your-servers-from-downgrade-attacks/</guid>
      <description>&lt;p&gt;One of the coolest attacks is forcing a downgrade between the client and server, making the server believe that client has support only for older and insecure versions of your protocol. This works with Windows&amp;#8217; NTLM authentication and with &lt;acronym title=&#34;Secure Sockets Layer&#34;&gt;SSL&lt;/acronym&gt;, mostly.&lt;/p&gt;

&lt;h2 id=&#34;how-does-8216-downgrade-attack-8217-work&#34;&gt;How does &amp;#8216;downgrade attack&amp;#8217; work?&lt;/h2&gt;

&lt;p&gt;Downgrade attacks are born from a misconfiguration and takes place within &lt;acronym title=&#34;Man-in-the-middle&#34;&gt;MITM&lt;/acronym&gt; attacks. Privilege is escalated by trapping the connection request and thus forcing the use of an older protocol version with known security issues by faking the client-side accepted protocol versions. Then the weak protocol is attacked and access is escalated.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>